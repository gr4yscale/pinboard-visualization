<html>
	<head>
		<title>three-fun</title>
		<style>
			body { margin: 0; }
			canvas { width: 100%; height: 100% }
		</style>
	</head>
	<body>
		<script src="js/three.js"></script>
		<script>
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );

			var spotLight = new THREE.SpotLight(0xffffff, 2.0, -2.5);
			spotLight.position.set( 0, 40, 15);
			spotLight.castShadow = true;

			var cubes = [];
			var numCubes = 90;

			var color = new THREE.Color(0xffffff);

			for ( i = 1; i < numCubes; i ++ ) {
				var hue = (i / numCubes) * 0.4 - 0.3;
				color.setHSL(hue, 1.0, 0.5);

				var width = (24 - (24/numCubes) * i);
				var material = new THREE.MeshLambertMaterial( { color: color, opacity: 0.40, transparent: true } );
				var geometry = new THREE.BoxGeometry( width, 0.10, width );
				var cube = new THREE.Mesh( geometry, material );
				
				cube.position.y = 0.2 * i;
				cube.rotation.y = 0.50;

				cube.castShadow = true;
				
				scene.add(cube);
				cubes.push(cube);
			}

			scene.add(spotLight);

			camera.position.y = 13;
			camera.position.z = 24;
			camera.rotation.x = -0.4;


			function render() {
				requestAnimationFrame( render );

				var time = Date.now() * 0.0015;
				var i;

				for ( i = (numCubes - 1); i > 0; i-- ) {
					var p = (i/numCubes) * 0.1;

					var cube = cubes[i-1];
					cube.rotation.y += ((Math.sin(time) * p) + 0.01 * 0.5);
					
					// var hue = (Math.sin(time) * 0.12) + 0.7;
					// cube.material.color.setHSL(hue + (p*10) * .55, 1.0, 0.5);
				}

				renderer.render( scene, camera );
			}

			render();

		</script>
	</body>
</html>